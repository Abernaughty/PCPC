# Infrastructure Validation Template
# Validates Terraform configuration and infrastructure as code

parameters:
  - name: terraformVersion
    type: string
    default: "1.13.3"

jobs:
  - job: ValidateInfrastructure
    displayName: "Infrastructure Validation"
    steps:
      # Checkout code
      - checkout: self
        displayName: "Checkout Repository"

      # Setup Terraform
      - task: TerraformInstaller@1
        displayName: "Install Terraform ${{ parameters.terraformVersion }}"
        inputs:
          terraformVersion: ${{ parameters.terraformVersion }}

      # Terraform Format Check
      - script: |
          terraform fmt -check -recursive
        displayName: "Terraform Format Check"
        workingDirectory: $(System.DefaultWorkingDirectory)/infra
        continueOnError: true

      # Initialize Terraform for each module
      - script: |
          echo "Validating Terraform modules..."
          for module in infra/modules/*; do
            if [ -d "$module" ]; then
              echo "Initializing module: $module"
              cd "$module"
              terraform init -backend=false
              terraform validate
              cd - > /dev/null
            fi
          done
        displayName: "Validate Terraform Modules"
        workingDirectory: $(System.DefaultWorkingDirectory)

      # Validate dev environment
      - script: |
          terraform init -backend=false
          terraform validate
        displayName: "Validate Dev Environment"
        workingDirectory: $(System.DefaultWorkingDirectory)/infra/envs/dev
        env:
          TF_VAR_environment: dev

      # Install TFLint
      - script: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
        displayName: "Install TFLint"

      # Run TFLint on modules
      - script: |
          echo "Running TFLint on modules..."
          for module in infra/modules/*; do
            if [ -d "$module" ]; then
              echo "Linting module: $module"
              cd "$module"
              tflint --init
              tflint || echo "⚠️  TFLint warnings found (non-blocking)"
              cd - > /dev/null
            fi
          done
        displayName: "TFLint - Modules"
        workingDirectory: $(System.DefaultWorkingDirectory)
        continueOnError: true

      # Run TFLint on dev environment
      - script: |
          tflint --init
          tflint || echo "⚠️  TFLint warnings found (non-blocking)"
        displayName: "TFLint - Dev Environment"
        workingDirectory: $(System.DefaultWorkingDirectory)/infra/envs/dev
        continueOnError: true

      # Check for security issues with Checkov (optional)
      - script: |
          pip3 install checkov || echo "⚠️  Checkov not installed"
          checkov -d infra/modules --quiet --compact || echo "⚠️  Security findings (non-blocking)"
        displayName: "Security Scan (Checkov)"
        continueOnError: true

      # Display summary
      - script: |
          echo "======================================"
          echo "Infrastructure Validation Summary"
          echo "======================================"
          echo "✅ Terraform Format: Checked"
          echo "✅ Module Validation: Completed"
          echo "✅ Environment Validation: Completed"
          echo "✅ TFLint: Analyzed"
          echo "✅ Security: Scanned"
        displayName: "Display Validation Summary"
