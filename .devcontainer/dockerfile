FROM mcr.microsoft.com/devcontainers/base:ubuntu-22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV NODE_VERSION=22.19.0
ENV TERRAFORM_VERSION=1.13.3
ENV GO_VERSION=1.23.12
ENV PYTHON_VERSION=3.12

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    jq \
    unzip \
    zip \
    git \
    build-essential \
    software-properties-common \
    apt-transport-https \
    ca-certificates \
    gnupg \
    lsb-release \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js 22.19.0 LTS
RUN curl -fsSL https://deb.nodesource.com/setup_22.x | bash - \
    && apt-get install -y nodejs \
    && node --version \
    && npm --version

# Install Azure CLI
RUN curl -sL https://aka.ms/InstallAzureCLIDeb | bash \
    && az --version

# Install Azure DevOps extension for Azure CLI
RUN az extension add --name azure-devops

# Install Terraform 1.13.3 (Direct binary download)
RUN wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \
    && unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip \
    && mv terraform /usr/local/bin/ \
    && rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip \
    && chmod +x /usr/local/bin/terraform \
    && terraform version

# Install Azure Functions Core Tools v4
RUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg \
    && mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg \
    && sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-$(lsb_release -cs)-prod $(lsb_release -cs) main" > /etc/apt/sources.list.d/dotnetdev.list' \
    && apt-get update \
    && apt-get install -y azure-functions-core-tools-4 \
    && func --version

# Install Go 1.23.12
RUN wget https://go.dev/dl/go${GO_VERSION}.linux-amd64.tar.gz \
    && tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz \
    && rm go${GO_VERSION}.linux-amd64.tar.gz \
    && echo 'export PATH=$PATH:/usr/local/go/bin' >> /etc/profile \
    && /usr/local/go/bin/go version

# Install PowerShell
RUN wget -q "https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb" \
    && dpkg -i packages-microsoft-prod.deb \
    && apt-get update \
    && apt-get install -y powershell \
    && rm packages-microsoft-prod.deb \
    && pwsh --version

# Install GitHub CLI
RUN curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
    && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
    && apt-get update \
    && apt-get install -y gh \
    && gh --version

# Install Python 3.12 and pip
RUN add-apt-repository ppa:deadsnakes/ppa \
    && apt-get update \
    && apt-get install -y python3.12 python3.12-dev python3.12-venv \
    && curl -sS https://bootstrap.pypa.io/get-pip.py | python3.12 \
    && ln -sf /usr/bin/python3.12 /usr/bin/python3 \
    && ln -sf /usr/bin/python3.12 /usr/bin/python \
    && python3 --version \
    && pip3 --version

# Install additional development tools
RUN apt-get update && apt-get install -y \
    vim \
    nano \
    htop \
    tree \
    && rm -rf /var/lib/apt/lists/*

# Set up vscode user environment
USER vscode

# # Set up Go environment for vscode user
# RUN echo 'export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin' >> ~/.bashrc \
#     && echo 'export GOPATH=$HOME/go' >> ~/.bashrc

# Create workspace directory
USER root
RUN mkdir -p /workspace && chown vscode:vscode /workspace

# Switch back to vscode user
USER vscode
WORKDIR /workspace

# Set default shell to bash
SHELL ["/bin/bash", "-c"]

# --- add near the end ---
USER root

# (Optional) deps referenced by your .bashrc: bash-completion, netstat, telnet, etc.
RUN apt-get update && apt-get install -y \
    bash-completion net-tools telnet cmatrix fortune cowsay lolcat screenfetch \
    && rm -rf /var/lib/apt/lists/*

# Option A: copy a pinned file from your repo
# Put the file in your repo at .devcontainer/.bashrc first
COPY .devcontainer/.bashrc /home/vscode/.bashrc
RUN chown vscode:vscode /home/vscode/.bashrc

# Keep your PATH/GOPATH lines from earlier (append them to the copied file)
RUN echo 'export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin' >> /home/vscode/.bashrc \
 && echo 'export GOPATH=$HOME/go' >> /home/vscode/.bashrc

# (Alternative Option B: fetch latest from GitHub)
# RUN curl -fsSL https://raw.githubusercontent.com/Abernaughty/git-maber/main/dotfiles/bashrc/.bashrc \
#     -o /home/vscode/.bashrc && chown vscode:vscode /home/vscode/.bashrc

USER vscode
