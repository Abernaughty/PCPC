{
  "name": "PCPC Enterprise Development Environment",
  "dockerComposeFile": "docker-compose.yml",
  "service": "devcontainer",
  "workspaceFolder": "/workspace",

  "customizations": {
    "vscode": {
      "extensions": [
        "HashiCorp.terraform",
        "ms-vscode.terraform-plan",
        "ms-vscode.azure-account",
        "ms-azuretools.vscode-azurefunctions",
        "ms-azuretools.vscode-azurestaticwebapps",
        "ms-azuretools.vscode-azureresourcegroups",
        "ms-azuretools.vscode-cosmosdb",
        "ms-azuretools.vscode-azurestorage",
        "ms-vscode.powershell",
        "golang.go",
        "ms-dotnettools.csharp",
        "ms-azure-devops.azure-pipelines",
        "GitHub.vscode-github-actions",
        "ms-vscode.vscode-json",
        "redhat.vscode-yaml",
        "yzhang.markdown-all-in-one",
        "bierner.markdown-mermaid",
        "jebbs.plantuml",
        "ms-vscode.vscode-eslint",
        "ms-python.python",
        "ms-python.pylint",
        "ms-vscode.remote-containers",
        "ms-vscode.remote-repositories",
        "eamodio.gitlens",
        "streetsidesoftware.code-spell-checker",
        "saoudrizwan.claude-dev",
        "ms-playwright.playwright",
        "esbenp.prettier-vscode",
        "bradlc.vscode-tailwindcss",
        "svelte.svelte-vscode",
        "github.copilot-chat",
        "github.vscode-pull-request-github"
      ],

      "settings": {
        "terraform.experimentalFeatures.validateOnSave": true,
        "terraform.experimentalFeatures.prefillRequiredFields": true,
        "go.toolsManagement.checkForUpdates": "local",
        "powershell.codeFormatting.preset": "OTBS",
        "files.associations": {
          "*.tf": "terraform",
          "*.tfvars": "terraform",
          "*.hcl": "terraform"
        }
      }
    }
  },

  "containerEnv": {
    "TF_VAR_environment": "local",
    "TF_VAR_location": "centralus",
    "AZURE_FUNCTIONS_ENVIRONMENT": "Development",
    "ASPNETCORE_ENVIRONMENT": "Development",
    "NODE_ENV": "development"
  },

  "remoteEnv": {
    "PATH": "${containerEnv:PATH}:/usr/local/go/bin:/home/vscode/go/bin"
  },

  "postCreateCommand": ".devcontainer/setup.sh",
  "postStartCommand": ".devcontainer/startup.sh",

  "forwardPorts": [
    3000, // Frontend Dev Server (CRITICAL - MISSING!)
    7071, // Azure Functions
    8081, // Cosmos DB Gateway
    8900, // Cosmos DB MongoDB API
    8901, // Cosmos DB MongoDB API
    8902, // Cosmos DB MongoDB API
    8979, // Cosmos DB Data Explorer
    9229, // Node.js Debugger
    10000, // Azurite Blob
    10001, // Azurite Queue
    10002, // Azurite Table
    10250, // Cosmos DB SQL API
    10251, // Cosmos DB Internal
    10252, // Cosmos DB Internal
    10253, // Cosmos DB Internal
    10254, // Cosmos DB Internal
    10255, // Cosmos DB Internal
    10256, // Cosmos DB Internal
    10350, // Cosmos DB Internal
    35729 // LiveReload
  ],

  "portsAttributes": {
    "3000": {
      "label": "Frontend Dev Server (Svelte)",
      "onAutoForward": "notify"
    },
    "7071": {
      "label": "Azure Functions (Backend API)",
      "onAutoForward": "notify"
    },
    "8081": {
      "label": "Cosmos DB Emulator Gateway",
      "onAutoForward": "notify"
    },
    "8900": {
      "label": "Cosmos DB MongoDB API",
      "onAutoForward": "silent"
    },
    "8901": {
      "label": "Cosmos DB MongoDB API",
      "onAutoForward": "silent"
    },
    "8902": {
      "label": "Cosmos DB MongoDB API",
      "onAutoForward": "silent"
    },
    "8979": {
      "label": "Cosmos DB Data Explorer",
      "onAutoForward": "silent"
    },
    "9229": {
      "label": "Node.js Debugger",
      "onAutoForward": "silent"
    },
    "10000": {
      "label": "Azurite Blob Storage",
      "onAutoForward": "silent"
    },
    "10001": {
      "label": "Azurite Queue Storage",
      "onAutoForward": "silent"
    },
    "10002": {
      "label": "Azurite Table Storage",
      "onAutoForward": "silent"
    },
    "35729": {
      "label": "LiveReload",
      "onAutoForward": "silent"
    }
  },

  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind",
    "source=${localWorkspaceFolder}/.devcontainer/cosmos-data,target=/tmp/cosmos/appdata,type=bind"
  ],

  "remoteUser": "vscode",

  "shutdownAction": "stopCompose"
}
